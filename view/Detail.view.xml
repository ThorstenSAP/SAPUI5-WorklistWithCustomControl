<mvc:View
	controllerName="mycompany.myapp.MyWorklistApp.controller.Detail"
	xmlns="sap.m"
	xmlns:mvc="sap.ui.core.mvc"
	xmlns:semantic="sap.f.semantic"
	xmlns:ownListItem="mycompany.myapp.MyWorklistApp.controls">

	<semantic:SemanticPage>

		<semantic:titleHeading>
			<Title text="Title" />
		</semantic:titleHeading>

		<semantic:headerContent>
		</semantic:headerContent>

		<semantic:content>

			<!-- <VBox>
				<Text text="{DataModel>name}" />
				
				<List items="{
					path: 'DataModel>details',
					sorter: {
						path: 'Done',
						descending: false,
						group: true
					}
				}">
						<headerToolbar>
							<OverflowToolbar>
								<Title text="Tasks" />
								<ToolbarSpacer />
								<Button icon="sap-icon://edit" 
										press="toggleEditMode"
										visible="{= !${appView>/layout/editForm/editable}}" />
								<Button icon="sap-icon://add" 
										press="addTask"
										visible="{= !${appView>/layout/editForm/editable}}" />
								
                            	<Button type="Accept" text="save" press="saveEdit" visible="{= ${appView>/layout/editForm/editable}}"/>
							</OverflowToolbar>
						</headerToolbar>
						<CustomListItem>
							<HBox
							renderType="Bare"
							justifyContent="SpaceBetween">
									<CheckBox
										editable="{= ${appView>/layout/editForm/editable}}" 
										id="CheckboxDone"
										selected="{DataModel>Done}" />
									
									<Input value="{DataModel>Description}"
											visible="{= !${appView>/layout/editForm/editable}}" 
											enabled="false" />
									<Input 
											visible="{= ${appView>/layout/editForm/editable}}"
											id="TypeHere"
											value="{DataModel>Description}"
											/>

									
									<DatePicker 
										visible="{= !${appView>/layout/editForm/editable}}"
										editable="false"
										value="{DataModel>DueDate}"
										valueFormat="yyyy-MM-dd"
										displayFormat="long"
									/>
									
									<DatePicker 
										visible="{= ${appView>/layout/editForm/editable}}"
										editable="true"
										id="ShippedDatePicker"
										value="{DataModel>DueDate}"
										valueFormat="yyyy-MM-dd"
										displayFormat="long"
									/>
									

									<HBox>
										<Button
											icon="sap-icon://delete" 
											press="deleteTask"
											enabled="{= ${appView>/layout/editForm/editable}}"/>
									</HBox>
							</HBox>
						</CustomListItem> 
						<ownListItem:ShadowBox 
							selected="{DataModel>Done}"
							text="{DataModel>Description}"
							date="{DataModel>DueDate}" />

				</List>   


			</VBox> -->

			<VBox>
				<HBox class="headerButtonsRightAlignment">
					<!-- <Button icon="sap-icon://edit" 
							press="toggleEditMode"
							visible="{= !${appView>/layout/editForm/editable}}" />
					<Button icon="sap-icon://add" 
							press="addTask"
							visible="{= !${appView>/layout/editForm/editable}}" /> -->
					<Button type="Accept" text="save" press="saveEdit" /> <!-- visible="{= ${appView>/layout/editForm/editable}}" -->
					<Button type="Default" text="add" press="addTask" /> <!-- visible="{= ${appView>/layout/editForm/editable}}" -->
				</HBox>
				<VBox items="{
						path: 'DataModel>details',
						sorter: {
							path: 'Done',
							descending: true,
							group: true
						}
					}">

					<ownListItem:ShadowBox 
						selected="{DataModel>Done}"
						text="{DataModel>Description}"
						date="{DataModel>DueDate}" />

				</VBox>
			</VBox>

			
		</semantic:content>

            <semantic:fullScreenAction>
                <semantic:FullScreenAction
                    id="enterFullScreen"
                    visible="{= !${appView>/layout/actionButtonsInfo/midColumn/fullScreen}}"
                    press=".toggleDetailFullScreen" />
            </semantic:fullScreenAction>
            
            <semantic:exitFullScreenAction>
                <semantic:ExitFullScreenAction
                    id="exitFullScreen"
                    visible="{= ${appView>/layout/actionButtonsInfo/midColumn/fullScreen}}"
                    press=".toggleDetailFullScreen" />
            </semantic:exitFullScreenAction>
            
            <semantic:closeAction>
                <semantic:CloseAction
                    id="closeColumn"
                    press=".onCloseDetailPress"/>
		</semantic:closeAction>

	</semantic:SemanticPage>

</mvc:View>